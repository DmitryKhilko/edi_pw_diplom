import random
from datetime import datetime, date, timedelta


class Fake:
    @staticmethod
    def text(param_name: str, param_value: any, validation: str):
        """
        –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è.
        –ú–µ—Ç–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–≤–µ–¥–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. –°–¥–µ–ª–∞–Ω–æ —ç—Ç–æ —Å —Ü–µ–ª—å—é –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏
        –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ min –∏ max –¥–ª–∏–Ω—ã
        –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–∞–º–µ–Ω—É min –∏ max –∑–Ω–∞—á–µ–Ω–∏–π –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤
        –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Ç–æ–¥–µ —Ñ–µ–π–∫–µ—Ä–∞, –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
        –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ param_value:
        '' - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞;
        '   ' - —Ç—Ä–∏ –ø—Ä–æ–±–µ–ª–∞;
        '<min' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ min (–Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã);
        ' <min' - –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª + –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ min (+ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤);
        '<min ' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        ' <min ' - –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª + –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        'min' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã;
        ' min' - –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª + –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã;
        'min ' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        ' min ' - –Ω–∞—á–∞–ª—å–Ω—ã–π –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        '>min' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã;
        'n' - —Å–ª—É—á–∞–π–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–∂–¥—É –Ω–∏–∂–Ω–µ–π –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ–π (–¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—Å—Ç–∏—Ü–∏–¥–∞);
        '<max' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ max (–≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã);
        'max' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ;
        ' max' - –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª + –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ max (+ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤);
        'max ' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        ' max ' - –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª + –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Ä–∞–≤–Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        '>max' - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –±–æ–ª—å—à–µ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã.

        –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (validation='valid') - –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤,
        —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (validation='invalid') - –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤.

        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –≤ param_value –≤—Ä—É—á–Ω—É—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ (–Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–µ) –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.

        :param param_name: –∏–º—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è –Ω–∞ —Ñ–æ—Ä–º–µ; '*' –≤ –∏–º–µ–Ω–∏ - —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è
        :param param_value: –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –≤—ã–±–∏—Ä–∞–µ–º—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        :param validation: –ø—Ä–∏–∑–Ω–∞–∫ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: 'valid' –∏–ª–∏ 'invalid'
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        """

        result = ''

        """
        –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ param_value,
        –Ω–∞–ø—Ä–∏–º–µ—Ä, f.text('*person_last_name', '123', 'invalid') 
        """
        if param_value not in ('', '   ', '<min', ' <min', '<min ', ' <min ', 'min', ' min', 'min ', ' min ',
                               '>min', 'n', '<max', 'max', ' max', 'max ', ' max ', '>max'):
            return param_value

        else:

            """
            –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ param_value,
            –Ω–∞–ø—Ä–∏–º–µ—Ä, f.text('*person_last_name', 'n', 'valid') 
            """

            if param_name == '*person_last_name':
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ñ–∞–º–∏–ª–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–º–∏–ª–∏–∏: 
                - –¥–ª–∏–Ω–∞ –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤; 
                - –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ –∏ –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞; —Å–∏–º–≤–æ–ª ¬´–¥–µ—Ñ–∏—Å¬ª
                - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.
                """
                min_length = 2
                max_length = 50

                valid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
                valid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                valid_set_3 = '-'
                invalid_set_1 = 'qwertyuiopasdfghjklzxcvbnm'
                invalid_set_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                invalid_set_3 = '`~!@#$%^&*()_+{}|‚Äù:?><=[]\‚Äô;/.,'
                invalid_set_4 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
                invalid_set_5 = '1234567890'
                invalid_set_6 = ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '' and (validation == 'valid' or validation == 'invalid'):
                    result = ''

                if param_value == '   ' and (validation == 'valid' or validation == 'invalid'):
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3), min_length - 1))

                if param_value == '<min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length - 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' <min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3), min_length - 1))

                if param_value == ' <min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                          invalid_set_4 + invalid_set_5), min_length - 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<min ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –∫–æ–Ω–µ—á–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3), min_length - 1)) + ' '

                if param_value == '<min ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –∫–æ–Ω–µ—á–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length - 1)) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' <min ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∏ –∫–æ–Ω–µ—á–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3),
                                                         min_length - 1)) + ' '

                if param_value == ' <min ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö –Ω–µ —Å–∏–º–≤–æ–ª–æ–≤; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∏ –∫–æ–Ω–µ—á–Ω—ã–º
                    # –ø—Ä–æ–±–µ–ª–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                          invalid_set_4 + invalid_set_5), min_length - 1)) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), min_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), min_length))

                if param_value == 'min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), min_length))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), min_length + 1))

                if param_value == '>min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - 1)] + invalid_set_6 + result[(len(result) - 1):]

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
                    # min_length + 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '>min'
                    # max_length - 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '<max'
                    random_length = random.randint(min_length + 2, max_length - 2)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω–æ–π; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), random_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), random_length))

                if param_value == 'n' and validation == 'invalid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
                    random_length = random.randint(min_length + 2, max_length - 2)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω–æ–π
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), random_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):]

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length - 1))

                if param_value == '<max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):]

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length))

                if param_value == 'max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):]

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((result + valid_set_3), max_length))

                if param_value == ' max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):]

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ''.join(random.sample((result + valid_set_3), max_length)) + ' '

                if param_value == 'max ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):] + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞, –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((result + valid_set_3), max_length)) + ' '

                if param_value == ' max ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞, –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):] + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length + 1))

                if param_value == '>max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_6 + result[(len(result) - index):]

                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""

            if param_name in ('*person_first_name', 'person_patronymic'):
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞, –æ—Ç—á–µ—Å—Ç–≤–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏–º–µ–Ω–∏, –∫ –æ—Ç—á–µ—Å—Ç–≤—É: 
                - –¥–ª–∏–Ω–∞ –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤; 
                - –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ –∏ –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞; ¬´–¥–µ—Ñ–∏—Å¬ª; –ø—Ä–æ–±–µ–ª—ã –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏. 
                - –∏–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –æ—Ç—á–µ—Å—Ç–≤–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.
                """
                min_length = 2
                max_length = 50

                valid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
                valid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                valid_set_3 = '-'
                # TODO –ü—Ä–æ–±–µ–ª –≤ –∏–º–µ–Ω–∏, –æ—Ç—á–µ—Å—Ç–≤–µ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É. –≠—Ç–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
                valid_set_4 = ' '
                # valid_set_4 = ''
                invalid_set_1 = 'qwertyuiopasdfghjklzxcvbnm'
                invalid_set_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                invalid_set_3 = '`~!@#$%^&*()_+{}|‚Äù:?><=[]\‚Äô;/.,'
                invalid_set_4 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
                invalid_set_5 = '1234567890'

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '' and (validation == 'valid' or validation == 'invalid'):
                    result = ''

                if param_value == '   ' and (validation == 'valid' or validation == 'invalid'):
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3), min_length - 1))

                if param_value == '<min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length - 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' <min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏;
                    # —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3), min_length - 1))

                if param_value == ' <min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                          invalid_set_4 + invalid_set_5), min_length - 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<min ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏;
                    # —Å –∫–æ–Ω–µ—á–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3), min_length - 1)) + ' '

                if param_value == '<min ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; —Å –∫–æ–Ω–µ—á–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º
                    # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length - 1)) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' <min ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –¥–µ—Ñ–∏—Å–∞,
                    # –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∏ –∫–æ–Ω–µ—á–Ω—ã–º –ø—Ä–æ–±–µ–ª–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((valid_set_1 + valid_set_2 + valid_set_3),
                                                         min_length - 1)) + ' '

                if param_value == ' <min ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö –Ω–µ —Å–∏–º–≤–æ–ª–æ–≤; —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∏ –∫–æ–Ω–µ—á–Ω—ã–º
                    # –ø—Ä–æ–±–µ–ª–æ–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                          invalid_set_4 + invalid_set_5), min_length - 1)) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), min_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), min_length))

                if param_value == 'min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), min_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), min_length))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - 1)] + valid_set_4 + result[(len(result) - 1):]

                if param_value == '>min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), min_length + 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
                    # min_length + 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '>min'
                    # max_length - 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '<max'
                    random_length = random.randint(min_length + 2, max_length - 2)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω–æ–π;
                    # –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), random_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), random_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):]

                if param_value == 'n' and validation == 'invalid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
                    random_length = random.randint(min_length + 2, max_length - 2)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω–æ–π
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), random_length))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 3))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):]

                if param_value == '<max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length - 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):]

                if param_value == 'max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ
                    # —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):]

                if param_value == ' max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ
                    # –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                          invalid_set_4 + invalid_set_5), max_length))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ
                    # —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):] + ' '

                if param_value == 'max ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–µ—á–Ω–æ–≥–æ
                    # –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length)) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞, –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):] + ' '

                if param_value == ' max ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏
                    # –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                          invalid_set_4 + invalid_set_5), max_length)) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤–Ω—É—Ç—Ä–∏
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), max_length))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + valid_set_4 + result[(len(result) - index):]

                if param_value == '>max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), max_length + 1))

                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""

            if param_name == 'person_phone':
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ç–µ–ª–µ—Ñ–æ–Ω—É: 
                - –¥–ª–∏–Ω–∞ –¥–æ 13 —Å–∏–º–≤–æ–ª–æ–≤; 
                - –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: —Ü–∏—Ñ—Ä—ã (–Ω–µ –±–æ–ª—å—à–µ 12), —Å–∏–º–≤–æ–ª ¬´+¬ª (–ø–µ—Ä–≤—ã–º —Å–∏–º–≤–æ–ª–æ–º —Å—Ç—Ä–æ–∫–∏)
                - –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.                
                """

                min_length = 0
                max_length = 13

                valid_set_1 = '1234567890'
                valid_set_2 = '+'
                invalid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
                invalid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                invalid_set_3 = 'qwertyuiopasdfghjklzxcvbnm'
                invalid_set_4 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                invalid_set_5 = '`~!@#$%^&*()_{-}|‚Äù:?><=[]\‚Äô;/.,'
                invalid_set_6 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
                invalid_set_7 = ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '' and validation == 'valid':
                    result = ''

                if param_value == '   ' and validation == 'valid':
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'min' and validation == 'valid':
                    result = ''

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.sample(valid_set_1, min_length + 1))

                if param_value == '>min' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), min_length + 1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
                    # min_length + 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '>min'
                    # max_length - 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '<max'
                    random_length = random.randint(min_length + 2, max_length - 2)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω–æ–π; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.sample(valid_set_1, random_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                if param_value == 'n' and validation == 'invalid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–æ–∫–∏
                    random_length = random.randint(min_length + 2, max_length - 2)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–æ —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω–æ–π
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), random_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.choice(valid_set_1) for i in range(max_length - 2))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                if param_value == '<max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), max_length - 3))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.choice(valid_set_1) for i in range(max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                if param_value == 'max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), max_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.choice(valid_set_1) for i in range(max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + valid_set_2 + result

                if param_value == ' max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), max_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞ –∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + valid_set_2 + result

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.choice(valid_set_1) for i in range(max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = valid_set_2 + result + ' '

                if param_value == 'max ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), max_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = valid_set_2 + result + ' '

                """ ------------------------------------------------------------------------------------------------"""
                if param_value == ' max ' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.choice(valid_set_1) for i in range(max_length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞, –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + valid_set_2 + result + ' '

                if param_value == ' max ' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), max_length - 2))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞, –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                    # –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –∫–æ–Ω–µ—á–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + valid_set_2 + result + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'valid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤; –±–µ–∑ –ø–ª—é—Å–∞
                    result = ''.join(random.choice(valid_set_1) for i in range(max_length))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                if param_value == '>max' and validation == 'invalid':
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5 + invalid_set_6), max_length - 1))
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                    index = random.randint(1, len(result))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                    result = result[:(len(result) - index)] + invalid_set_7 + result[(len(result) - index):]
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–ª—é—Å–∞
                    result = valid_set_2 + result

                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""

            if param_name == '*person_email':
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ email: 
                - –¥–ª–∏–Ω–∞ –¥–æ 254 —Å–∏–º–≤–æ–ª–æ–≤; 
                - –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º email
                - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.                
                """

                min_length = 7
                max_length = 254

                valid_set_login_1 = 'qwertyuiopasdfghjklzxcvbnm'
                valid_set_login_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                valid_set_login_3 = '1234567890'
                valid_set_login_4 = '^[]-!#$%&*+/=?^_`{}|~'
                valid_set_login_5 = '.'

                valid_set_domain_1 = 'qwertyuiopasdfghjklzxcvbnm'
                valid_set_domain_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                valid_set_domain_3 = '1234567890'
                valid_set_domain_4 = '-'
                valid_set_domain_5 = '.'
                valid_set_domain_6 = ['biz', 'com', 'edu', 'gov', 'net']

                invalid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
                invalid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                invalid_set_3 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
                invalid_set_4 = ' '

                def email(length: int):
                    """
                    –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è email –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã

                    :param length: –¥–ª–∏–Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ email
                    :return: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π email
                    """

                    result_email = ''
                    login_part = ''
                    domain_part = ''

                    if validation == 'valid':
                        if (length - 5) // 2 <= 63:
                            # –§–æ—Ä–º–∏—Ä—É–µ–º domain (–ø—Ä–∞–≤—É—é —á–∞—Å—Ç—å email). –û–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 63 —Å–∏–º–≤–æ–ª–æ–≤.
                            domain_part = ''.join(random.choice(valid_set_domain_1 + valid_set_domain_2 +
                                                                valid_set_domain_3) for i in range((length - 5) // 2))
                            # –§–æ—Ä–º–∏—Ä—É–µ–º login (–ª–µ–≤—É—é —á–∞—Å—Ç—å email) –∫–∞–∫ —Ä–∞–∑–Ω–æ—Å—Ç—å –æ–±—â–µ–π –¥–ª–∏–Ω—ã, –¥–ª–∏–Ω—ã domain-—á–∞—Å—Ç–∏, –¥–ª–∏–Ω—ã
                            # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö —á–∞—Å—Ç–µ–π email - '@', '.', 'com'
                            login_part = ''.join(random.choice(valid_set_login_1 + valid_set_login_2 +
                                                               valid_set_login_3) for i in range(length - 5 -
                                                                                                 ((length - 5) // 2)))
                        else:
                            domain_part = ''.join(random.choice(valid_set_domain_1 + valid_set_domain_2 +
                                                                valid_set_domain_3) for i in range(63))
                            login_part = ''.join(random.choice(valid_set_login_1 + valid_set_login_2 +
                                                               valid_set_login_3) for i in range(length - 63 - 5))

                    if validation == 'invalid':
                        if (length - 5) // 2 <= 63:
                            # –§–æ—Ä–º–∏—Ä—É–µ–º domain (–ø—Ä–∞–≤—É—é —á–∞—Å—Ç—å email). –û–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 63 —Å–∏–º–≤–æ–ª–æ–≤.
                            domain_part = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3)
                                                  for i in range((length - 5) // 2))
                            # –§–æ—Ä–º–∏—Ä—É–µ–º login (–ª–µ–≤—É—é —á–∞—Å—Ç—å email) –∫–∞–∫ —Ä–∞–∑–Ω–æ—Å—Ç—å –æ–±—â–µ–π –¥–ª–∏–Ω—ã, –¥–ª–∏–Ω—ã domain-—á–∞—Å—Ç–∏, –¥–ª–∏–Ω—ã
                            # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö —á–∞—Å—Ç–µ–π email - '@', '.', 'com'
                            login_part = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3)
                                                 for i in range(length - 5 - ((length - 5) // 2)))
                        else:
                            domain_part = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3)
                                                  for i in range(63))
                            login_part = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3)
                                                 for i in range(length - 63 - 5))

                    # –°–æ–µ–¥–∏–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è email
                    result_email = login_part + '@' + domain_part + '.' + random.choice(valid_set_domain_6)

                    return result_email

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '' and validation == 'invalid':
                    result = ''

                if param_value == '   ' and validation == 'invalid':
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'min' and validation == 'valid':
                    result = email(min_length)

                if param_value == 'min' and validation == 'invalid':
                    result = email(min_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' min' and validation == 'valid':
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + email(min_length)

                if param_value == ' min' and validation == 'invalid':
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + email(min_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'min ' and validation == 'valid':
                    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤
                    result = email(min_length) + ' '

                if param_value == 'min ' and validation == 'invalid':
                    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤
                    result = email(min_length) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' min ' and validation == 'valid':
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ
                    # –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + email(min_length) + ' '

                if param_value == ' min ' and validation == 'invalid':
                    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ
                    # –∏ –∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä–æ–±–µ–ª–æ–≤
                    result = ' ' + email(min_length) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    result = email(min_length + 1)

                if param_value == '>min' and validation == 'invalid':
                    result = email(min_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ email
                    # min_length + 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '>min'
                    # max_length - 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '<max'
                    random_length = random.randint(min_length + 2, max_length - 2)
                    result = email(random_length)

                if param_value == 'n' and validation == 'invalid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ email
                    random_length = random.randint(min_length + 2, max_length - 2)
                    result = email(random_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    result = email(max_length - 1)

                if param_value == '<max' and validation == 'invalid':
                    result = email(max_length - 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    result = email(max_length)

                if param_value == 'max' and validation == 'invalid':
                    result = email(max_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max' and validation == 'valid':
                    result = ' ' + email(max_length)

                if param_value == ' max' and validation == 'invalid':
                    result = ' ' + email(max_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max ' and validation == 'valid':
                    result = email(max_length) + ' '

                if param_value == 'max ' and validation == 'invalid':
                    result = email(max_length) + ' '

                """ ------------------------------------------------------------------------------------------------"""
                if param_value == ' max ' and validation == 'valid':
                    result = ' ' + email(max_length) + ' '

                if param_value == ' max ' and validation == 'invalid':
                    result = ' ' + email(max_length) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'valid':
                    result = email(max_length + 1)

                if param_value == '>max' and validation == 'invalid':
                    result = email(max_length + 1)

                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""

            if param_name == 'person_card_id':
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ ID-–∫–∞—Ä—Ç—ã —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ card_id: 
                - –¥–ª–∏–Ω–∞ –¥–æ 40 —Å–∏–º–≤–æ–ª–æ–≤; 
                - –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞ (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É); —Ü–∏—Ñ—Ä—ã;
                - –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.                
                """

                min_length = 0
                max_length = 40

                valid_set_1 = '1234567890'
                valid_set_2 = 'qwertyuiopasdfghjklzxcvbnm'
                valid_set_3 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                invalid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
                invalid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                invalid_set_3 = '`~!@#$%^&*()_{+-}|‚Äù:?><=[]\‚Äô;/.,'
                invalid_set_4 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
                invalid_set_5 = ' '

                def card_id(length: int):
                    """
                    –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è card_id –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã

                    :param length: –¥–ª–∏–Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ card_id
                    :return: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π card_id
                    """

                    result_card_id = ''

                    if validation == 'valid':
                        result_card_id = ''.join(random.choice(valid_set_1 + valid_set_2 + valid_set_3)
                                                 for i in range(length))

                    if validation == 'invalid':
                        if length <= 2:
                            result_card_id = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                                   invalid_set_4) for i in range(length))
                        if length >= 3:
                            result_card_id = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                                   invalid_set_4) for i in range(length - 1))
                            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                            index = random.randint(1, len(result_card_id))
                            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                            result_card_id = result_card_id[:(len(result_card_id) - index)] + invalid_set_5 + \
                                             result_card_id[(len(result_card_id) - index):]

                    return result_card_id

                """ ------------------------------------------------------------------------------------------------"""

                if param_value in ('', 'min') and validation == 'valid':
                    result = ''

                if param_value == '   ' and validation == 'valid':
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    result = card_id(min_length + 1)

                if param_value == '>min' and validation == 'invalid':
                    result = card_id(min_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ email
                    # min_length + 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '>min'
                    # max_length - 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '<max'
                    random_length = random.randint(min_length + 2, max_length - 2)
                    result = card_id(random_length)

                if param_value == 'n' and validation == 'invalid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ email
                    random_length = random.randint(min_length + 2, max_length - 2)
                    result = card_id(random_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    result = card_id(max_length - 1)

                if param_value == '<max' and validation == 'invalid':
                    # max_length, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = card_id(max_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    result = card_id(max_length)

                if param_value == 'max' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = card_id(max_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max' and validation == 'valid':
                    result = ' ' + card_id(max_length)

                if param_value == ' max' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = ' ' + card_id(max_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max ' and validation == 'valid':
                    result = card_id(max_length) + ' '

                if param_value == 'max ' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = card_id(max_length + 1) + ' '

                """ ------------------------------------------------------------------------------------------------"""
                if param_value == ' max ' and validation == 'valid':
                    result = ' ' + card_id(max_length) + ' '

                if param_value == ' max ' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = ' ' + card_id(max_length + 1) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'valid':
                    result = card_id(max_length + 1)

                if param_value == '>max' and validation == 'invalid':
                    # max_length + 2, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = card_id(max_length + 2)

                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""

            if param_name == 'person_key_id':
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–ª—é—á–∞ –≠–¶–ü —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ card_id: 
                - –¥–ª–∏–Ω–∞ –¥–æ 40 —Å–∏–º–≤–æ–ª–æ–≤; 
                - –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞ (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É); —Ü–∏—Ñ—Ä—ã;
                - –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è;
                - –Ω–∞—á–∞–ª—å–Ω—ã–µ –∏ –∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã —É–¥–∞–ª—è—é—Ç—Å—è.                
                """

                min_length = 0
                max_length = 40

                valid_set_1 = '1234567890'
                valid_set_2 = 'qwertyuiopasdfghjklzxcvbnm'
                valid_set_3 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
                invalid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
                invalid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
                invalid_set_3 = '`~!@#$%^&*()_{+-}|‚Äù:?><=[]\‚Äô;/.,'
                invalid_set_4 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
                invalid_set_5 = ' '

                def key_id(length: int):
                    """
                    –í–ª–æ–∂–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è key_id –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã

                    :param length: –¥–ª–∏–Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ key_id
                    :return: —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π key_id
                    """

                    result_key_id = ''

                    if validation == 'valid':
                        result_key_id = ''.join(random.choice(valid_set_1 + valid_set_2 + valid_set_3)
                                                for i in range(length))

                    if validation == 'invalid':
                        if length <= 2:
                            result_key_id = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                                  invalid_set_4) for i in range(length))

                        if length >= 3:
                            result_key_id = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                                  invalid_set_4) for i in range(length - 1))
                            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ - –ø–æ–∑–∏—Ü–∏–∏, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–æ–±–µ–ª
                            index = random.randint(1, len(result_key_id))
                            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞
                            result_key_id = result_key_id[:(len(result_key_id) - index)] + invalid_set_5 + \
                                            result_key_id[(len(result_key_id) - index):]

                    return result_key_id

                """ ------------------------------------------------------------------------------------------------"""

                if param_value in ('', 'min') and validation == 'valid':
                    result = ''

                if param_value == '   ' and validation == 'valid':
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    result = key_id(min_length + 1)

                if param_value == '>min' and validation == 'invalid':
                    result = key_id(min_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ email
                    # min_length + 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '>min'
                    # max_length - 2 - —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ '<max'
                    random_length = random.randint(min_length + 2, max_length - 2)
                    result = key_id(random_length)

                if param_value == 'n' and validation == 'invalid':
                    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–ª–∏–Ω—ã –≤–Ω—É—Ç—Ä–∏ min –∏ max –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ email
                    random_length = random.randint(min_length + 2, max_length - 2)
                    result = key_id(random_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    result = key_id(max_length - 1)

                if param_value == '<max' and validation == 'invalid':
                    # max_length, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = key_id(max_length)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    result = key_id(max_length)

                if param_value == 'max' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = key_id(max_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' max' and validation == 'valid':
                    result = ' ' + key_id(max_length)

                if param_value == ' max' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = ' ' + key_id(max_length + 1)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max ' and validation == 'valid':
                    result = key_id(max_length) + ' '

                if param_value == 'max ' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = key_id(max_length + 1) + ' '

                """ ------------------------------------------------------------------------------------------------"""
                if param_value == ' max ' and validation == 'valid':
                    result = ' ' + key_id(max_length) + ' '

                if param_value == ' max ' and validation == 'invalid':
                    # max_length + 1, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = ' ' + key_id(max_length + 1) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'valid':
                    result = key_id(max_length + 1)

                if param_value == '>max' and validation == 'invalid':
                    # max_length + 2, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ UI –ø—Ä–æ–±–µ–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∏—Ä–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ API
                    result = key_id(max_length + 2)

                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""
                """ ------------------------------------------------------------------------------------------------"""

        return result

    @staticmethod
    def date(param_name: str, param_value: any, validation: str):
        """
        –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD-MM-YYYY –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è.
        –ú–µ—Ç–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–≤–µ–¥–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. –°–¥–µ–ª–∞–Ω–æ —ç—Ç–æ —Å —Ü–µ–ª—å—é –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏
        –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ min –∏ max –¥–∞—Ç—ã.
        –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–∞–º–µ–Ω—É min –∏ max –∑–Ω–∞—á–µ–Ω–∏–π –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤
        –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Ç–æ–¥–µ —Ñ–µ–π–∫–µ—Ä–∞, –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
        –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ param_value:
        '' - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞;
        '   ' - —Ç—Ä–∏ –ø—Ä–æ–±–µ–ª–∞;
        '<min' - –¥–∞—Ç–∞ –º–µ–Ω—å—à–µ min (–Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã);
        'min' - –¥–∞—Ç–∞ —Ä–∞–≤–Ω–∞ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã;
        '>min' - –¥–∞—Ç–∞ –±–æ–ª—å—à–µ –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã;
        'n' - —Å–ª—É—á–∞–π–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –º–µ–∂–¥—É –Ω–∏–∂–Ω–µ–π –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ–π (–¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—Å—Ç–∏—Ü–∏–¥–∞);
        ' n' - –Ω–∞—á–∞–ª—å–Ω—ã–π –ø—Ä–æ–±–µ–ª + —Å–ª—É—á–∞–π–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –º–µ–∂–¥—É –Ω–∏–∂–Ω–µ–π –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ–π;
        'n ' - —Å–ª—É—á–∞–π–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –º–µ–∂–¥—É –Ω–∏–∂–Ω–µ–π –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ–π + –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª;
        ' n ' - –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª—ã + —Å–ª—É—á–∞–π–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ –º–µ–∂–¥—É –Ω–∏–∂–Ω–µ–π –∏ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ–π;
        '<max' - –¥–∞—Ç–∞ –º–µ–Ω—å—à–µ max (–≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã);
        'max' - –¥–∞—Ç–∞ —Ä–∞–≤–Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü–µ;
        '>max' - –¥–∞—Ç–∞ –±–æ–ª—å—à–µ –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã.

        –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (validation='valid') - –º–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞—Ç—ã,
        —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (validation='invalid') - –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞–±–æ—Ä –Ω–µ –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞—Ç.

        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –≤ param_value –≤—Ä—É—á–Ω—É—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ (–Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–µ) –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.

        :param param_name: –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–ª—è –Ω–∞ —Ñ–æ—Ä–º–µ; '*' –≤ –∏–º–µ–Ω–∏ - —É–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è
        :param param_value: –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –≤—ã–±–∏—Ä–∞–µ–º—ã–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—Ç—ã
        :param validation: –ø—Ä–∏–∑–Ω–∞–∫ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: 'valid' –∏–ª–∏ 'invalid'
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–∞—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
        """

        result = ''

        invalid_set = (
            '–¥–∞—Ç–∞–¥–∞—Ç–∞–¥–∞', '0', '1234567890', '00.00.0000', '0000-00-00', '00.03.1973', '1973-03-00',
            '12.00.1973', '1973-00-12', '12.03.0000', '0000-03-12', '99.99.9999', '9999-99-99', '12.99.1973',
            '1973-99-12', '99.03.1973', '1973-03-99', 'dd.03.1973', '1973-03-dd', '12.mm.1973', '1973-mm-12',
            '12.03.yyyy', 'yyyy-03-12' 'dd.mm.yyyy', 'yyyy-mm-dd', '12/03/1973', '1973/03/12',
            'üçèüòÄ.üê±üêπ.üê∞üêªüçÖüçª', 'üçèüòÄüê±üêπ-üê∞üêª-üçÖüçª'
        )

        """
        –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ param_value,
        –Ω–∞–ø—Ä–∏–º–µ—Ä, f.data('person_birthday', '99.03.1973', 'invalid') 
        """
        if param_value not in ('', '   ', '<min', 'min', '>min', 'n', ' n', 'n ', ' n ', '<max', 'max', '>max'):
            return param_value

        else:

            """
            –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ param_value,
            –Ω–∞–ø—Ä–∏–º–µ—Ä, f.text('person_birthday', 'n', 'valid') 
            """

            if param_name == 'person_birthday':
                """
                –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
                –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∞—Ç–µ: 
                - —Ñ–æ—Ä–º–∞—Ç YYYY-MM-DD –∏–ª–∏ DD.MM.YYYY
                - –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.
                """

                min_date = datetime.strptime('0001-01-01', '%Y-%m-%d')
                max_date = datetime.strptime(str(date.today()), '%Y-%m-%d')  # –Ω–µ –±–æ–ª—å—à–µ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '' and validation == 'invalid':
                    result = ''

                if param_value == '   ' and validation == 'invalid':
                    result = '   '

                """ ------------------------------------------------------------------------------------------------"""

                # if param_value == '<min': - –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –Ω–µ –≤–≤–µ–¥–µ—à—å, –æ–Ω–∞ —Å–∞–º–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è 01.01.0001
                #     result = str(min_date - timedelta(days=1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'min' and validation == 'valid':
                    result = str(min_date.date())

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>min' and validation == 'valid':
                    result = str(min_date.date() + timedelta(days=1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n' and validation == 'valid':
                    delta = max_date - min_date
                    result = str(datetime.date(min_date + timedelta(random.randint(0, delta.days))))

                if param_value == 'n' and validation == 'invalid':
                    result = random.choice(invalid_set)

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' n' and validation == 'valid':
                    delta = max_date - min_date
                    result = ' ' + str(datetime.date(min_date + timedelta(random.randint(0, delta.days))))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'n ' and validation == 'valid':
                    delta = max_date - min_date
                    result = str(datetime.date(min_date + timedelta(random.randint(0, delta.days)))) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == ' n ' and validation == 'valid':
                    delta = max_date - min_date
                    result = ' ' + str(datetime.date(min_date + timedelta(random.randint(0, delta.days)))) + ' '

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '<max' and validation == 'valid':
                    result = str(max_date.date() - timedelta(days=1))

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == 'max' and validation == 'valid':
                    result = str(max_date.date())

                """ ------------------------------------------------------------------------------------------------"""

                if param_value == '>max' and validation == 'invalid':
                    result = str(max_date.date() + timedelta(days=1))

        return result

    @staticmethod
    def drop_down_list(param_name: str, param_value: any, validation: str):

        """
        –ú–µ—Ç–æ–¥ –≤—ã–±–æ—Ä–∞ –∫–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞.
        –ú–µ—Ç–æ–¥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–≤–µ–¥–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. –°–¥–µ–ª–∞–Ω–æ —ç—Ç–æ —Å —Ü–µ–ª—å—é –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏
        –º–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤—ã—Ö) —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏ –∫–æ–¥–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–Ω–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –≤
        –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–µ—Ç–æ–¥–µ —Ñ–µ–π–∫–µ—Ä–∞ (–∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π set), –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –º–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.
        –í–æ–∑–º–æ–∂–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ param_value:
        'n' - —Å–ª—É—á–∞–π–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ valid_set –∏–ª–∏ invalid_set (–¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –ø–µ—Å—Ç–∏—Ü–∏–¥–∞).

        –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (validation='valid') - –≤—ã–±–∏—Ä–∞—é—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–¥–æ–≤,
        —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (validation='invalid') - –≤—ã–±–∏—Ä–∞—é—Ç—Å—è –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–¥–æ–≤.

        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –≤ param_value –≤—Ä—É—á–Ω—É—é –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ (–Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º–æ–µ) –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.

        :param param_name: –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞ –Ω–∞ —Ñ–æ—Ä–º–µ
        :param param_value: –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞
        :param validation: –ø—Ä–∏–∑–Ω–∞–∫ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: 'valid' –∏–ª–∏ 'invalid'
        :return: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –∫–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–∞ —Ä–∞—Å–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è —Å–ø–∏—Å–∫–∞
        """

        result = ''

        if param_name == 'person_sex':
            """
            –ú–µ—Ç–æ–¥ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –¥–∞—Ç–µ: 
            - 0 - –∂–µ–Ω—Å–∫–∏–π –ø–æ–ª;
            - 1 - –º—É–∂—Å–∫–æ–π –ø–æ–ª;
            - –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.
            """

            valid_set = (0, 1)
            invalid_set = (-1, 2, 11, '0', '1', None, '', '  ', 'Zs–Ø—â@5')

            """
            –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ param_value,
            –Ω–∞–ø—Ä–∏–º–µ—Ä, f.drop_down_list('person_sex', 'Zs–Ø—â@5', 'invalid') 
            """
            if param_value not in ('', '   ', 'n', ' n', 'n ', ' n '):
                return param_value

            else:

                """
                –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ param_value,
                –Ω–∞–ø—Ä–∏–º–µ—Ä, f.drop_down_list('person_sex', 'n', 'valid') 
                """

                if param_value == 'n' and validation == 'valid':
                    result = random.choice(valid_set)

                if param_value == ' n' and validation == 'valid':
                    result = ' ' + random.choice(valid_set)

                if param_value == 'n ' and validation == 'valid':
                    result = random.choice(valid_set) + ' '

                if param_value == ' n ' and validation == 'valid':
                    result = ' ' + random.choice(valid_set) + ' '

                if param_value == 'n' and validation == 'invalid':
                    result = random.choice(invalid_set)

        return result
