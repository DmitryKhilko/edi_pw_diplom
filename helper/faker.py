import random
from datetime import datetime, date
from datetime import timedelta


class Fake:

    @staticmethod
    def last_name(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π —Ñ–∞–º–∏–ª–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ñ–∞–º–∏–ª–∏–∏: –¥–ª–∏–Ω–∞ –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ø—É—Å—Ç–∏–º—ã–µ
            –∑–Ω–∞—á–µ–Ω–∏—è: –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ –∏ –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞; —Å–∏–º–≤–æ–ª
            ¬´–¥–µ—Ñ–∏—Å¬ª. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False). –î–ª—è —ç—Ç–æ–≥–æ –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            –≤–∞–ª–∏–¥–Ω—ã–µ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
        """

        if value == '':

            valid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
            valid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
            valid_set_3 = '-'
            invalid_set_1 = 'qwertyuiopasdfghjklzxcvbnm'
            invalid_set_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
            invalid_set_3 = '`~!@#$%^&*()_+{}|‚Äù:?><=[]\‚Äô;/.,'
            invalid_set_4 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
            invalid_set_5 = '1234567890'
            invalid_set_6 = ' '

            result = ''

            if length == 0:  # –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ valid
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                    result = ''
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                    result = ''

            elif length == 1:  # –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –º–µ—Ç–æ–¥–∞ valid
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), length))
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), length))

            elif length == 2:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), length - 1))
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å –¥–µ—Ñ–∏—Å–æ–º
                    result = ''.join(random.sample((result + valid_set_3), length))
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), length))

            elif 3 <= length <= 51:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((valid_set_1 + valid_set_2), length - 1))
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å –¥–µ—Ñ–∏—Å–æ–º
                    result = ''.join(random.sample((result + valid_set_3), length))
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤, –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞
                    result = ''.join(random.sample((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5), length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª—ã
                    # –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±—Ä–µ–∑–∞–µ—Ç
                    result = result[:(len(result) - 1)] + invalid_set_6 + result[(len(result) - 1):]

            elif length > 51:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –¥–µ—Ñ–∏—Å–∞, —Ç–∞–∫
                    # –∫–∞–∫ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∞–±–æ—Ä–∞—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
                    # –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.choice((valid_set_1 + valid_set_2)) for i in range(length - 1))
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–∞ —Å–∏–º–≤–æ–ª–æ–≤ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥–µ—Ñ–∏—Å–∞
                    result = ''.join(random.sample((result + valid_set_3), length))
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–æ–≤—Ç–æ—Ä–æ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞, —Ç–∞–∫
                    # –∫–∞–∫ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∞–±–æ—Ä–∞—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª–∏–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
                    # –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤
                    result = ''.join(random.choice((invalid_set_1 + invalid_set_2 + invalid_set_3 +
                                                    invalid_set_4 + invalid_set_5)) for i in range(length - 1))
                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä—å —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ–±–µ–ª, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—á–∞–ª—å–Ω—ã–π –∏ –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–±–µ–ª—ã
                    # –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±—Ä–µ–∑–∞–µ—Ç
                    result = result[:(len(result) - 1)] + invalid_set_6 + result[(len(result) - 1):]

            return result

        else:
            return value

    @staticmethod
    def first_name(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∏–º–µ–Ω–∏: –¥–ª–∏–Ω–∞ –æ—Ç 2 –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ø—É—Å—Ç–∏–º—ã–µ
            –∑–Ω–∞—á–µ–Ω–∏—è: –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ –∏ –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞;
            —Å–∏–º–≤–æ–ª ¬´–¥–µ—Ñ–∏—Å¬ª; –ø—Ä–æ–±–µ–ª—ã –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è
            –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False). –î–ª—è —ç—Ç–æ–≥–æ –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            –≤–∞–ª–∏–¥–Ω—ã–µ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
        """

        if value == '':
            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                char_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é' \
                             '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
            else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                char_set_1 = 'qwertyuiopasdfghjklzxcvbnm' \
                             'QWERTYUIOPASDFGHJKLZXCVBNM' \
                             '1234567890' \
                             '`~!@#$%^&*()_+{}|‚Äù:?><=[]\‚Äô;/.,' \
                             'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'

            char_set_2 = '-'
            char_set_3 = ''
            result_str = ''

            if length == 0:
                result_str = ''

            elif length == 1:
                result_str = ''.join(random.sample(char_set_1, length))

            elif length == 2:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length - 1))
                    result_str = ''.join(random.sample((result_str + char_set_2), length))
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length))

            elif 3 <= length <= 51:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length - 2))
                    result_str = ''.join(random.sample((result_str + char_set_2), length - 1))
                    result_str = result_str[:(len(result_str) - 1)] + char_set_3 + result_str[(len(result_str) - 1):]
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length))

            elif length > 51:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.choice(char_set_1) for i in range(length - 2))
                    result_str = ''.join(random.sample((result_str + char_set_2), length - 1))
                    result_str = result_str[:(len(result_str) - 1)] + char_set_3 + result_str[(len(result_str) - 1):]
                else:
                    result_str = ''.join(random.sample(char_set_1, length))

            return result_str

        else:
            return value

    @staticmethod
    def patronymic(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ—Ç—á–µ—Å—Ç–≤—É: –¥–ª–∏–Ω–∞ –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ø—É—Å—Ç–∏–º—ã–µ
            –∑–Ω–∞—á–µ–Ω–∏—è: –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ –∏ –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞;
            —Å–∏–º–≤–æ–ª ¬´–¥–µ—Ñ–∏—Å¬ª; –ø—Ä–æ–±–µ–ª—ã –≤–Ω—É—Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏. –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è
            –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False). –î–ª—è —ç—Ç–æ–≥–æ –æ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
            –≤–∞–ª–∏–¥–Ω—ã–µ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
        """

        if value == '':

            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                char_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é' \
                             '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
            else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                char_set_1 = 'qwertyuiopasdfghjklzxcvbnm' \
                             'QWERTYUIOPASDFGHJKLZXCVBNM' \
                             '1234567890' \
                             '`~!@#$%^&*()_+{}|‚Äù:?><=[]\‚Äô;/.,' \
                             'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'

            char_set_2 = '-'
            char_set_3 = ''
            result_str = ''

            if length == 0:
                result_str = ''

            elif length == 1:
                result_str = ''.join(random.sample(char_set_1, length))

            elif length == 2:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length - 1))
                    result_str = ''.join(random.sample((result_str + char_set_2), length))
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length))

            elif 3 <= length <= 51:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length - 2))
                    result_str = ''.join(random.sample((result_str + char_set_2), length - 1))
                    result_str = result_str[:(len(result_str) - 1)] + char_set_3 + result_str[(len(result_str) - 1):]
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.sample(char_set_1, length))

            elif length > 51:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.choice(char_set_1) for i in range(length - 2))
                    result_str = ''.join(random.sample((result_str + char_set_2), length - 1))
                    result_str = result_str[:(len(result_str) - 1)] + char_set_3 + result_str[(len(result_str) - 1):]
                else:
                    result_str = ''.join(random.sample(char_set_1, length))

            return result_str

        else:
            return value

    @staticmethod
    def date(valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ DD-MM-YYYY
            –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 01.01.1900 –¥–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False).
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
        """

        if value == '':

            result_str = ''

            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                start_date = datetime.strptime('1900-01-01', '%Y-%m-%d')
                end_date = datetime.strptime(str(date.today()), '%Y-%m-%d')
                delta = end_date - start_date
                result_str = str(datetime.date(start_date + timedelta(random.randint(0, delta.days))))
            else:
                tomorrow = str(datetime.date(datetime.strptime(str(date.today() + timedelta(days=1)), '%Y-%m-%d')))
                set_date = (
                    '', ' ', '–¥–∞—Ç–∞–¥–∞—Ç–∞–¥–∞', '0', '1234567890', '00.00.0000', '00.03.1973', '12.00.1973', '12.03.0000',
                    '31.12.1899', '99.99.9999', '12.03.9999', '12.99.1973', '99.03.1973', 'dd.03.1973',
                    '12.mm.1973', '12.03.yyyy', 'dd.mm.yyyy', tomorrow, '12/03/1973')
                result_str = random.choice(set_date)

            return result_str

        else:
            return value

    @staticmethod
    def sex(valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–∞.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False).
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
        """

        if value == '':

            result_str = ''

            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                char_set = (0, 1)
            else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=False)
                char_set = ('-1', '2', '99', None, '', ' ', 'Zs–Ø—â@5')

            result_str = random.choice(char_set)

            return result_str

        else:
            return value

    @staticmethod
    def phone(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Ç–µ–ª–µ—Ñ–æ–Ω—É: –¥–ª–∏–Ω–∞ –¥–æ 13 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ø—É—Å—Ç–∏–º—ã–µ
            –∑–Ω–∞—á–µ–Ω–∏—è: —Ü–∏—Ñ—Ä—ã (–Ω–µ –±–æ–ª—å—à–µ 12), —Å–∏–º–≤–æ–ª ¬´+¬ª (–ø–µ—Ä–≤—ã–º
            —Å–∏–º–≤–æ–ª–æ–º —Å—Ç—Ä–æ–∫–∏)
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False).
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''


            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        """

        if value == '':

            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–≤—ã–±—Ä–∞–Ω–æ valid=True)
                char_set_1 = '1234567890'
            else:
                char_set_1 = '—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é' \
                             '–Å–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ' \
                             'qwertyuiopasdfghjklzxcvbnm' \
                             'QWERTYUIOPASDFGHJKLZXCVBNM' \
                             '1234567890' \
                             '`~!@#$%^&*()_{}|‚Äù:?><=[]\‚Äô;/.,' \
                             'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'

            char_set_2 = '+'
            result_str = ''

            if length == 0:
                result_str = ''

            elif length == 1:
                result_str = ''.join(random.choice(char_set_1) for i in range(length))

            elif length >= 2:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.choice(char_set_1) for i in range(length - 1))
                    result_str = char_set_2 + result_str
                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result_str = ''.join(random.choice(char_set_1) for i in range(length - 1))
                    result_str = ''.join(random.sample((result_str + char_set_2), length))

            return result_str

        else:
            return value

    @staticmethod
    def email(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ email: –¥–ª–∏–Ω–∞ –¥–æ 254 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ª–∂–µ–Ω
            –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º –∞–¥—Ä–µ—Å–æ–º —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False).
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        """

        if value == '':

            result = ''

            valid_set_login_1 = 'qwertyuiopasdfghjklzxcvbnm'
            valid_set_login_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
            valid_set_login_3 = '1234567890'
            valid_set_login_4 = '^[]-!#$%&*+/=?^_`{}|~'
            valid_set_login_5 = '.'

            valid_set_domain_1 = 'qwertyuiopasdfghjklzxcvbnm'
            valid_set_domain_2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'
            valid_set_domain_3 = '1234567890'
            valid_set_domain_4 = '-'
            valid_set_domain_5 = '.'
            valid_set_domain_6 = ['biz', 'com ', 'edu', 'gov', 'net']

            invalid_set_1 = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é'
            invalid_set_2 = '–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ'
            invalid_set_3 = 'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
            invalid_set_4 = ' '

            if length == 0:
                result = ''

            if length >= 7:
                if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    # –§–æ—Ä–º–∏—Ä—É–µ–º domain (–ø—Ä–∞–≤—É—é —á–∞—Å—Ç—å email). –û–Ω–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 63 —Å–∏–º–≤–æ–ª–æ–≤.
                    if (length - 5)//2 <= 63:
                        domain = ''.join(random.choice(valid_set_domain_1 + valid_set_domain_2 + valid_set_domain_3)
                                         for i in range((length - 5)//2))
                        login = ''.join(random.choice(valid_set_login_1 + valid_set_login_2 + valid_set_login_3) for i in range(length - 5 - ((length - 5)//2)))
                    else:
                        domain = ''.join(random.choice(valid_set_domain_1 + valid_set_domain_2 + valid_set_domain_3)
                                         for i in range(63))
                        login = ''.join(random.choice(valid_set_login_1 + valid_set_login_2 + valid_set_login_3) for i in range(length - 63 - 5))

                    result = login + '@' + domain + '.' + random.choice(valid_set_domain_6)
                    # ? –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –ª–∏ –±–æ–ª—å—à–∏–µ –±—É–∫–≤—ã?
                    result = result.lower()

                else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                    result = ''.join(random.choice(invalid_set_1 + invalid_set_2 + invalid_set_3) for i in range(length))

            return result

        else:
            return value

    @staticmethod
    def key_id(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –∫–ª—é—á–∞ –≠–¶–ü.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç—Ä–æ–∫–µ: –¥–ª–∏–Ω–∞ –¥–æ 40 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ø—É—Å—Ç–∏–º—ã–µ
            –∑–Ω–∞—á–µ–Ω–∏—è: –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞; —Ü–∏—Ñ—Ä—ã.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False).
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

        """

        if value == '':

            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                char_set_1 = 'QWERTYUIOPASDFGHJKLZX1234567890'
            else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                char_set_1 = '—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é' \
                             '–Å–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ' \
                             'qwertyuiopasdfghjklzxcvbnm' \
                             'QWERTYUIOPASDFGHJKLZXCVBNM' \
                             '1234567890' \
                             '`~!@#$%^&*()_{}|‚Äù:?><=[]\‚Äô;/.,' \
                             'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
            result_str = ''

            if length == 0:
                result_str = ''
            elif length >= 1:
                result_str = ''.join(random.choice(char_set_1) for i in range(length))

            return result_str

        else:
            return value

    @staticmethod
    def card_id(length: int, valid: bool, value: any):

        """
            –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ ID-–∫–∞—Ä—Ç—ã.
            –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç—Ä–æ–∫–µ: –¥–ª–∏–Ω–∞ –¥–æ 40 —Å–∏–º–≤–æ–ª–æ–≤; –¥–æ–ø—É—Å—Ç–∏–º—ã–µ
            –∑–Ω–∞—á–µ–Ω–∏—è: –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –≤–µ—Ä—Ö–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞; —Ü–∏—Ñ—Ä—ã.
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (valid=True),
            —Ç–∞–∫ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–µ (valid=False).
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ value=''.
            –¢–∞–∫ –∂–µ –≤–æ–∑–º–æ–∂–µ–Ω –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä—É—á–Ω—É—é, –µ—Å–ª–∏ value <> ''

            :parameter
            _____________________
            - length: –∑–∞–¥–∞–Ω–Ω–∞—è –¥–ª–∏–Ω–∞ –æ—Ç 0 –¥–æ ...
            - valid: –∫–∞–∫—É—é —Å—Ç—Ä–æ–∫—É —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–æ–¥ - –≤–∞–ª–∏–¥–Ω—É—é (True) –∏–ª–∏ –Ω–µ—Ç (False)
            - value: –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä—É—á–Ω—É—é

            :return
            _____________________
            - result_str: —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞

        """

        if value == '':

            if valid:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                char_set_1 = 'QWERTYUIOPASDFGHJKLZX1234567890'
            else:  # —Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                char_set_1 = '—ë–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é' \
                             '–Å–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠–Ø–ß–°–ú–ò–¢–¨–ë–Æ' \
                             'qwertyuiopasdfghjklzxcvbnm' \
                             'QWERTYUIOPASDFGHJKLZXCVBNM' \
                             '1234567890' \
                             '`~!@#$%^&*()_{}|‚Äù:?><=[]\‚Äô;/.,' \
                             'üçèüòÄüòÉüòÑüòúüê∂üê±üê≠üêπüê∞üêªüçÖüçª'
            result_str = ''

            if length == 0:
                result_str = ''
            elif length >= 1:
                result_str = ''.join(random.choice(char_set_1) for i in range(length))

            return result_str

        else:
            return value
